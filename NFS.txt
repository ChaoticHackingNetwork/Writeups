NFS
	• Typical NFS setup: server that exports a directory and any number of clients
Root_Squash (mount option)
	• by default, NFS shares change the root user to the nfsnobody user, an unprivileged user account. 
	• All root-created files are owned by nfsnobody, which prevents uploading of programs with the SUID bit set
	• Enabled as a security precaution on NFS systems
	• if no_root_squash is used, remote root users are able to change any file on the shared file system and leave trojaned applications for other users to inadvertently execute
	• Should NEVER use no_root_squash unless draconian circumstances arise.

Setting up the NFS Server
	1. verify nfs-utils package is installed
	2. make the mount point directory
		a. ex- mkdir /nfs
	3. give open access to the mount point
		a. ex- chmod 777 /nfs
	4. edit the /etc/exports file with nfs entry

		○ /etc/exports format- 
			§ mountpoint who has permission to the share what can be performed
			§ ex- /nfs *(rw)
				□ additional mount options- ro, no_root_squash
	5. start the nfs export services
		a. ex- systemctl start {rpcbind, nfs-server,rpc-statd,nfs-idmapd}
	6. perform the nfs export
		a. exportfs -a
	7. verify the export is mounted
		a. showmount -e localhost

Setting up the NFS Client

• From CentOS:

	○ 
	○ to mount run mount -t nfs -o initr, tcp, hard A000NQM.radiustoday.com:/path/to/remote folder /path/to/local/folder
	○ 
	○ to mount in the fstab file, follow the convention:
	○ 




Performing the Client NFS Mount
	1. verify nfs-utils package is installed and that rpcbind is started/enabled
	
	
	2. create the mount point directory
	3. start nfs client service
		a. systemctl start rpcbind
	4. verify the mount is available from the client
		a. For this to work, you will need to be able to access nfs over the network
		b. showmount -e <Server IP>
	5. mount -t nfs <Server IP>:<Server Path>
		a. 
	6. Make mount persistent
		a. 
		b. 


